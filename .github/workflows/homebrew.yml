name: Homebrew Build and Test

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      
      - name: Install dependencies
        run: |
          brew install rust node pkg-config openssl@3
          
      - name: Build frontend
        run: |
          cd frontend
          npm ci --legacy-peer-deps
          npm run build
          
      - name: Build Rust application
        run: |
          cargo build --release
          
      - name: Create bottle (package)
        run: |
          # Create a temporary formula installation
          mkdir -p bottle_build
          cp target/release/chef-de-vibe bottle_build/
          
          # Create bottle structure
          mkdir -p chef-de-vibe/0.1.0/bin
          cp target/release/chef-de-vibe chef-de-vibe/0.1.0/bin/
          
          # Create bottle tar
          tar czf chef-de-vibe-0.1.0.monterey.bottle.tar.gz chef-de-vibe
          
      - name: Upload bottle artifact
        uses: actions/upload-artifact@v4
        with:
          name: chef-de-vibe-macos-bottle
          path: chef-de-vibe-*.bottle.tar.gz
          
      - name: Test Homebrew formula
        run: |
          # Test the formula locally
          brew install --build-from-source ./Formula/chef-de-vibe.rb
          brew test chef-de-vibe
          
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
          
      - name: Build frontend
        run: |
          cd frontend
          npm ci --legacy-peer-deps
          npm run build
          
      - name: Build Rust application
        run: |
          cargo build --release
          
      - name: Create Linux binary archive
        run: |
          mkdir -p chef-de-vibe-linux-x86_64
          cp target/release/chef-de-vibe chef-de-vibe-linux-x86_64/
          tar czf chef-de-vibe-linux-x86_64.tar.gz chef-de-vibe-linux-x86_64
          
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: chef-de-vibe-linux-x86_64
          path: chef-de-vibe-linux-x86_64.tar.gz
          
  create-release:
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Calculate SHA256
        run: |
          sha256sum chef-de-vibe-macos-bottle/*.tar.gz > sha256sums.txt
          sha256sum chef-de-vibe-linux-x86_64/*.tar.gz >> sha256sums.txt
          
      - name: Update formula with SHA256
        run: |
          TARBALL_SHA=$(sha256sum chef-de-vibe-linux-x86_64/*.tar.gz | awk '{print $1}')
          sed -i "s/PLACEHOLDER_SHA256/${TARBALL_SHA}/" Formula/chef-de-vibe.rb
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            chef-de-vibe-macos-bottle/*.tar.gz
            chef-de-vibe-linux-x86_64/*.tar.gz
            sha256sums.txt
            Formula/chef-de-vibe.rb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}