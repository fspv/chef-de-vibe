name: Check Claude Code Version and Release

on:
  schedule:
    # Run daily at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force a new release even if version unchanged'
        required: false
        default: false
        type: boolean

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get current stored Claude Code version
      id: current
      run: |
        if [[ -f .claude-code-version ]]; then
          CURRENT_VERSION=$(cat .claude-code-version)
        else
          CURRENT_VERSION="0.0.0"
        fi
        echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
        echo "Current stored version: ${CURRENT_VERSION}"
        
    - name: Get latest Claude Code version
      id: latest
      run: |
        # Try to get the latest version from npm
        RESPONSE=$(curl -s "https://registry.npmjs.org/@anthropic-ai/claude-code/latest")
        
        # Extract version
        LATEST_VERSION=$(echo "$RESPONSE" | jq -r '.version // empty')
        
        if [[ -z "$LATEST_VERSION" ]]; then
          echo "Failed to fetch Claude Code version from npm"
          exit 1
        fi
        
        echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
        echo "Latest Claude Code version: ${LATEST_VERSION}"
        
    - name: Compare versions and determine if update needed
      id: compare
      run: |
        CURRENT="${{ steps.current.outputs.version }}"
        LATEST="${{ steps.latest.outputs.version }}"
        FORCE="${{ github.event.inputs.force_release }}"
        
        if [[ "$CURRENT" != "$LATEST" ]] || [[ "$FORCE" == "true" ]]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
          echo "Version update needed: $CURRENT -> $LATEST (Force: $FORCE)"
        else
          echo "update_needed=false" >> $GITHUB_OUTPUT
          echo "No version update needed"
        fi
        
    - name: Update Claude Code version file
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        echo "${{ steps.latest.outputs.version }}" > .claude-code-version
        
    - name: Commit version update
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .claude-code-version
        git commit -m "[chore]: Update Claude Code version to ${{ steps.latest.outputs.version }}"
        
    - name: Push version file update
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        git push origin HEAD:${{ github.ref }}
        
    - name: Trigger Docker build workflow
      if: steps.compare.outputs.update_needed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          // Trigger the Docker build workflow directly without creating a new git tag
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'docker-build-push.yml',
            ref: '${{ github.ref }}'
          });
          console.log('Triggered Docker build workflow for Claude Code version: ${{ steps.latest.outputs.version }}');