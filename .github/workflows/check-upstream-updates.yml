name: Check Upstream Updates and Build

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags
    
    - name: Get latest claudecodeui version
      id: get_upstream_version
      run: |
        VERSION=$(curl -s https://api.github.com/repos/fspv/claudecodeui-docker/releases/latest | jq -r '.tag_name')
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Latest upstream version: $VERSION"
    
    - name: Check if release exists
      id: check_release
      run: |
        if git tag | grep -q "^${{ steps.get_upstream_version.outputs.VERSION }}$"; then
          echo "EXISTS=true" >> $GITHUB_OUTPUT
          echo "Release ${{ steps.get_upstream_version.outputs.VERSION }} already exists"
        else
          echo "EXISTS=false" >> $GITHUB_OUTPUT
          echo "Release ${{ steps.get_upstream_version.outputs.VERSION }} does not exist, will create"
        fi
    
    - name: Set up Docker Buildx
      if: steps.check_release.outputs.EXISTS == 'false'
      uses: docker/setup-buildx-action@v3
    
    - name: Pull base image first (before login)
      if: steps.check_release.outputs.EXISTS == 'false'
      run: |
        echo "Pulling base image: nuhotetotniksvoboden/claudecodeui:${{ steps.get_upstream_version.outputs.VERSION }}"
        docker pull nuhotetotniksvoboden/claudecodeui:${{ steps.get_upstream_version.outputs.VERSION }} || \
        (echo "Failed to pull version ${{ steps.get_upstream_version.outputs.VERSION }}, trying latest..." && \
         docker pull nuhotetotniksvoboden/claudecodeui:latest)
    
    - name: Log in to Docker Hub
      if: steps.check_release.outputs.EXISTS == 'false'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build test image
      if: steps.check_release.outputs.EXISTS == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: chef-de-vibe:test
        build-args: |
          CLAUDECODEUI_VERSION=${{ steps.get_upstream_version.outputs.VERSION }}
    
    - name: Run tests
      if: steps.check_release.outputs.EXISTS == 'false'
      run: |
        docker run --rm -v $PWD:/workspace chef-de-vibe:test python3 /workspace/test_claude_container.py
    
    - name: Build and push Docker image
      if: steps.check_release.outputs.EXISTS == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          nuhotetotniksvoboden/chef-de-vibe:latest
          nuhotetotniksvoboden/chef-de-vibe:${{ steps.get_upstream_version.outputs.VERSION }}
        build-args: |
          CLAUDECODEUI_VERSION=${{ steps.get_upstream_version.outputs.VERSION }}
    
    - name: Create Release
      if: steps.check_release.outputs.EXISTS == 'false'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.get_upstream_version.outputs.VERSION }}
        name: Release ${{ steps.get_upstream_version.outputs.VERSION }}
        body: |
          Automated release tracking upstream claudecodeui-docker version ${{ steps.get_upstream_version.outputs.VERSION }}
          
          Docker image: `nuhotetotniksvoboden/chef-de-vibe:${{ steps.get_upstream_version.outputs.VERSION }}`
        token: ${{ secrets.GITHUB_TOKEN }}
        makeLatest: true